//SIMPLE CALCULATER IN ASSEMABLY LANGUAGE




ACALL ADDI	 // CALL THE ADDI( ABSOLUTE CALL INTRACTION)
ACALL SUBI	// CALL THE SUBI( ABSOLUTE CALL INTRACTION)
ACALL DIVI	// CALL THE DIVI( ABSOLUTE CALL INTRACTION)
ACALL MULI	 // CALL THE MULI( ABSOLUTE CALL INTRACTION)

ADDI:  // DEFNITION OF THE ADDI(ADD INSTRACTION)
MOV A,30H // MOVE THE DIRECT ADDRESS 30H TO THE ACCUMALETER A
MOV B,31H  // MOVE THE DIRECT ADDRESS 31H TO THE RESITER B
ADD A,B	  // ADD THE CONTENT A WITH THE CONTENT B AND THE RESULT IS STORED IN THE ACCUMALTER
MOV 32H,A	// MOVE THE ACCUMALETER CONTENT TO THE MEMORY ADDRESS 32H

SUBI:  // DEFNITION OF THE SUBTRACT INSTRACTION
CLR C  // C STANDS FOR CARRY FROM THE PREVIOUS STAGE CLEAR THE CARRY BITE
MOV A,30H  // MOVE THE DIRECT ADDRESS 30H TO THE ACCUMULATER A
MOV B,31H // MOVE THE DIRECT ADDRESS 31H TO THE RESITER B
SUBB A,B // SUNTRACT THE CONTENT OF B FROM THE ACCUMALETER AND THE RESULT IS STROED IN THE A RESITER
MOV 33H,A // MOVE THE ACCUMALETR CONTENT TO THE 33H(MEMORY ADDRESS)

DIVI: 	 // DEFNITION OF THE DIV INSTRACTION
MOV A,30H // MOVE THE DITECT ADDRESS 30H TO THE ACCUMALETER A
MOV B,31H // MOVE THE DIRECT ADDRESS 31H TO THE B RESITER
DIV AB	 // DIVIED THE A RESITER FROM THE B RESITER AND THE LOWER ORDER ODRESS IS STORED IN THE LSB AND THE HIEGHER ORDER ADDRESS IS STORED IN THE B RESITER
MOV 34H,A  // MOVE THE CONTENT ACCUMALETR A TO THE 34H(MEMORY LOCATION)
MOV 35H,B // MOVE THE CONTENT OF RESITER B TO THE 35H (MEMORY LOCATION)

MULI:  //DEFNITION OF MULTIFLICATION INSTRACTION
MOV A,30H // MOVE THE DIRECT ADDRESS 30H TO THE ACCUMALETRA 
MOV B,31H// MOVE THE DIRECT ADDRESS 31H TO THE RESITER B
MUL AB // MULTIFLY THE A RESITER WITH THE B RESITER AND THE LOWER ORDER ADDRESS IS STORED IN THE A RESITER AND THE HIGHER ORDER ADDRESS IS STORED IN THE B RESITER
MOV 36H,A // MOVE THE ACCUMALETR CONTENT TO THE 36H MEMORY LOCATION
MOV 37H,B //MOVE THE CONTENT OF B RESITER TO THE 37H MEMORY LOCATION

END // END THE PROGRAM
