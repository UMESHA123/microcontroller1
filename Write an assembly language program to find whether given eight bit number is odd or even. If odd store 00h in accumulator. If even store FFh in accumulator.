Write an assembly language program to find whether given eight bit number is odd or even. If odd store 00h in accumulator. If even store FFh in accumulator. 



// 	90: 10010000   THE 0TH BITE IS AN ZERO HENCE GIVEN NUMBER IS EVEN
//OTHER WISE THE GIVEN NUMBER IS ODD
// IF LSB BIT IS ZERO(0) THEN GIVEN NUMBER IS EVEN (THEN SET THE #00H IN THE ACCUMALETR)
// EVEN NUMBER IS ONE(1) THEN GIVEN NUMBER IS ODD (THEN SET THE #0FFH IN THE ACCUMALETR)


//Write an assembly language program to find whether given eight bit number is odd or even. If odd store 00h in accumulator. If even store FFh in accumulator. 
MOV A,20H	  //MOVWE THE DIRECT ADDRESS 20H TO THE ACCUMALETER A
JB ACC.0,ODD// JUMP IF DIRECT BIT SET	IF LOWER BIT SET 1 IS ODD
MOV A,#0FFH  // OTHER WISE THE GIVEN NUMBER IS EVEN THE MOVE THE IMMEDIAT ADDRESS OFFH TO THE ACCUMALETER A	 (i,e THE LSB BIT IS 0)
SJMP LAST		// THE JUMP TO THE RELETIVE ADDRESS LAST
ODD: MOV A,#00H	 //IF THE GIVEN NUMBER IS THEN MOVE THE 00H TO THW ACCUMALETER(i,e LSB BIT IS ONE)
LAST:			  // THIS IS THE DEFNITION OF THE LAST ADDRESS
END			 // END THE PROGRAM



TRACE: FOR ODD
A=20H(90)
A= 90=1001 0000  ACCUMALETER[0]=0
IF ZERO THEN 
A=00H
END

TRACE: FOR EVEN
A=20H(90)
A=90=1001 0001 ACCUMALETER[0]=1
IF  ONE SET THEN EVEN
A=0FFH
END




