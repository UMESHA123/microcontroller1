Write an ALP to compare two eight-bit numbers NUM1 and NUM2 stored in 
external memory locations 8000h and 8001h respectively. Reflect your result as: 
If NUM1<NUM2, SET LSB of data RAM location 2FH (bit address 78H). If 
NUM1>NUM2, SET MSB of location 2FH (bit address 7FH). If NUM1 = NUM2, then 
Clear both LSB & MSB of bit addressable memory location 2FH. 





MOV DPTR,#8000H  // MOVE THE IMMEDIAT ADDRESS 8000H TO THE DPTR
MOVX A,@DPTR // MOVE THE EXTERNAL ADDRESS AT THE DPTR ARE MOVE TO THE ACCUMALATER
MOV R1,A // MOVE THE ACCUMALATER CONTENT TO THE RESITER R1
INC DPTR  // INCREMENT THE DPTR(AFTER INCREMENTING DPTR ADDRESS IS 8001H)
MOVX A,@DPTR // MOVE THE EXTERNAL  ADDRESS AT THE DPTR TO THE ACCUMALETER
CLR C	// C STANDS FOR CARRY SO CLEAR THE CARRY BEFORE SUBTRACTING
SUBB A,R1  // SUBTRACT R1 RESITER CONTENT BY THE ACCUMALATER A WITH 
JZ EQUAL  // JUMP IS ACCUMALATER CONTENT IS EQUAL TO ZERO  IT SAYS THET NUM1 IS EQUAL TO NUM2
JNC SMALL // JUMP IS IF CARRY IS NOT SET IT SAY THET NUM1 IS SMALLER THAN THE NUM2
SETB 7FH   //OTHER WISE SET THE BITE IN THE 7FH MEMORY LOCATION THIS SAYS THET NUM1 IS GREATER THEN NUM2
SJMP LAST	   //JUMP TO THE RELETIVE ADDRESS LAST(SJMP IS THE SMALL JUMP)

EQUAL:
CLR 78H	//DEFNITION OF EQUAL : IF NUM1 IS EQUAL TO NUM2 THE CLEAR THE 78H AND 7FH
CLR 7FH
SMALL:SETB 78H // IF  NUM1 IS SMALLER THE  NUM2 THEN SET THE BITE IN THE MEMORY LOACTION
SJMP LAST //   THEN JUMP TO THE RELETIVE ADDRESS i,e LAST
LAST:		//THIS IS THE DEFNITION OF THE LAST
END 		 //END THE PROGRAM
